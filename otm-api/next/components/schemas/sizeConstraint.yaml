type: object
properties:
  type:
    example: sizeConstraint
    type: string
    enum:
      - sizeConstraint
  constraintType:
    description: |
      The type of size constraint. Available types are:
        - `maximum`: All sizes below and including the maximum value are allowed.
        - `minimum`: All sizes above and including the minimum value are allowed.
        - `range`: All sizes in between and including the minimum and maximum values are allowed.
    type: string
    enum:
      - maximum
      - minimum
      - range
  maximum:
    description: Maximum size allowed.
    type: object
    properties:
      value:
        description: Value in the given unit.
        type: number
        format: double
      unit:
        description: >-
          Measurement unit of this value. OTM5 currently does not enforce any
          units of measure. So you are free to use

          any unit necessary. However to ensure parties use OTM5 consistently
          there are a few rules:

          * For **currencies** use the [ISO_4217
          standard](https://en.wikipedia.org/wiki/ISO_4217)

          * For **mass**, **volume** and **length** the [SI system
          (International System of
          Units)](https://en.wikipedia.org/wiki/International_System_of_Units)
          is
            recommended. To avoid problems with symbols, square and cubic units of measure are simply communicated using the
            proper number. Thus a square meter is `m2` and a cubic meter is `m3`.
          * For degrees the recommend approach is Celsius, but Fahrenheit and
          Kelvin are also supported. To again avoid
            problems with symbols, the degree symbol (째 in 째C) is left off, thus only the single capital letter remains
            (C, F, or K).
          * For velocity use the metric system. The required format would then
          be \<length\>/\<time unit\> for the metric
            system, such as km/h (kilometer per hour) or m/s (meter per second).

          Since usage is not enforced you can deviate from these rules, though
          only do so if strictly necessary. The

          benefit from using a standard comes from consistent use, so deviating
          from the recommendations diminishes your

          benefit.


          If the type of unit you need is not supported please create a

          [change
          request](https://github.com/opentripmodel/otm5-change-requests)
        type: string
    required:
      - value
      - unit
  minimum:
    description: Minimum size allowed.
    type: object
    properties:
      value:
        description: Value in the given unit.
        type: number
        format: double
      unit:
        description: >-
          Measurement unit of this value. OTM5 currently does not enforce any
          units of measure. So you are free to use

          any unit necessary. However to ensure parties use OTM5 consistently
          there are a few rules:

          * For **currencies** use the [ISO_4217
          standard](https://en.wikipedia.org/wiki/ISO_4217)

          * For **mass**, **volume** and **length** the [SI system
          (International System of
          Units)](https://en.wikipedia.org/wiki/International_System_of_Units)
          is
            recommended. To avoid problems with symbols, square and cubic units of measure are simply communicated using the
            proper number. Thus a square meter is `m2` and a cubic meter is `m3`.
          * For degrees the recommend approach is Celsius, but Fahrenheit and
          Kelvin are also supported. To again avoid
            problems with symbols, the degree symbol (째 in 째C) is left off, thus only the single capital letter remains
            (C, F, or K).
          * For velocity use the metric system. The required format would then
          be \<length\>/\<time unit\> for the metric
            system, such as km/h (kilometer per hour) or m/s (meter per second).

          Since usage is not enforced you can deviate from these rules, though
          only do so if strictly necessary. The

          benefit from using a standard comes from consistent use, so deviating
          from the recommendations diminishes your

          benefit.


          If the type of unit you need is not supported please create a

          [change
          request](https://github.com/opentripmodel/otm5-change-requests)
        type: string
    required:
      - value
      - unit
  description:
    description: >-
      The description for this (sub)-constraints. Can be used to make combined
      constraints using **and**, **or** and **not** easier to process.
    type: string
required:
  - type
  - constraintType
