example:
  id: 45db6ed0-28a7-4e4a-baba-3d5f8d171103
  name: Logistics manager
  contactDetails:
    - value: Simon Isaac
      remark: Wants to be called 'Sim'.
      type: firstName
    - value: Macan
      type: lastName
    - value: '+312012345678'
      remark: private cellphone of the CEO
      language: nld
      type: phone
    - value: simon@macan
      type: email
    - value: NL74BANK5890469479
      type: iban
    - value: NL000099998B57
      type: vatCode
type: object
discriminator:
  propertyName: type
  mapping:
    person: ./actor-person.yaml
    company: ./actor-company.yaml
anyOf:
  - $ref: ./actor-person.yaml
  - $ref: ./actor-company.yaml
properties:
  entityType:
    example: actor
    type: string
    enum:
      - actor
  id:
    description: >-
      Uniquely identifies this entity. A URI can be assigned by the client to
      indicate where more information
       can be retrieved. Note that every entity always has a unique EntityId. However since, OTM5.2 it is not
       required to send it in the request. One can be generated for you by the server.
    type: string
  type:
    type: string
    enum:
      - person
      - company
  name:
    description: Name of the entity. For display purposes and search only.
    type: string
  creationDate:
    description: The creation date of this entity.
    type: string
  lastModified:
    description: >-
      The last modified date of this entity. If none is given the creation date
      is used instead.
    type: string
  contextEvents:
    description: >-
      The context events provides some optional information about the events
      that can provide additional information
       on the current state of this entity.

      For example: your system might send ETA information for the arrival of a
      vehicle on a location. To make it clear

      what caused this ETA to be updated, we can include some information about
      what caused this ETA update by including

      an event as context. If your ETA update was caused by a location update,
      this event can be included as context. If

      the ETA was caused by a traffic accident on the route of the vehicle, you
      can include that event in the context.
    type: array
    items:
      $ref: ./events.yaml
  externalAttributes:
    type: object
    properties: {}
    additionalProperties:
      $ref: ./unrestricted_json.yaml
  contactDetails:
    description: Contact details for this `Actor`.
    type: array
    items:
      oneOf:
        - $ref: ./phone.yaml
        - $ref: ./mobilePhone.yaml
        - $ref: ./email.yaml
        - $ref: ./firstName.yaml
        - $ref: ./lastName.yaml
        - $ref: ./name.yaml
        - $ref: ./vatCode.yaml
        - $ref: ./gln.yaml
        - $ref: ./iban.yaml
        - $ref: ./eori.yaml
        - $ref: ./other.yaml
      discriminator:
        propertyName: type
        mapping:
          phone: ./phone.yaml
          mobilePhone: ./mobilePhone.yaml
          email: ./email.yaml
          firstName: ./firstName.yaml
          lastName: ./lastName.yaml
          name: ./name.yaml
          vatCode: ./vatCode.yaml
          gln: ./gln.yaml
          iban: ./iban.yaml
          eori: ./eori.yaml
          other: ./other.yaml
  locations:
    description: Locations for this `Actor`.
    type: array
    items:
      oneOf:
        - $ref: ./associated-locations-inline.yaml
        - $ref: ./reference.yaml
        - $ref: ./attributeRestriction.yaml
      discriminator:
        propertyName: associationType
        mapping:
          inline: ./associated-locations-inline.yaml
          reference: ./reference.yaml
          attributeRestriction: ./attributeRestriction.yaml
required:
  - entityType
