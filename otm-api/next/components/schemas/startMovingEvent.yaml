example:
  id: 706d7796-269e-46d4-b292-a8eea0b360c5
  lifecycle: actual
  vehicle:
    entity:
      id: b9bb914d-845e-46f2-91ff-31fa4bac2fbe
      name: Bob's Boxtruck
      vehicleType: boxtruck
      fuel: electricity
      loadCapacities:
        - value: 1000
          unit: kg
      length:
        value: 8
        unit: m
      height:
        value: 2.8
        unit: m
      width:
        value: 2
        unit: m
      licensePlate: AB-12-CD
      emptyWeight:
        value: 2000
        unit: kg
    associationType: inline
  geoReference:
    lat: 52.0905356
    lon: 5.1124527
    type: latLonPointGeoReference
  eventType: startMovingEvent
type: object
properties:
  eventType:
    example: startMovingEvent
    type: string
    enum:
      - startMovingEvent
  id:
    description: >-
      Uniquely identifies this entity. A URI can be assigned by the client to
      indicate where more information
       can be retrieved. Note that every entity always has a unique EntityId. However since, OTM5.2 it is not
       required to send it in the request. One can be generated for you by the server.
    type: string
  name:
    description: Name of the entity. For display purposes and search only.
    type: string
  creationDate:
    description: The creation date of this entity.
    type: string
  lastModified:
    description: >-
      The last modified date of this entity. If none is given the creation date
      is used instead.
    type: string
  contextEvents:
    description: >-
      The context events provides some optional information about the events
      that can provide additional information
       on the current state of this entity.

      For example: your system might send ETA information for the arrival of a
      vehicle on a location. To make it clear

      what caused this ETA to be updated, we can include some information about
      what caused this ETA update by including

      an event as context. If your ETA update was caused by a location update,
      this event can be included as context. If

      the ETA was caused by a traffic accident on the route of the vehicle, you
      can include that event in the context.
    type: array
    items:
      $ref: ./events.yaml
  externalAttributes:
    description: >
      External attributes are a simple way to add information in an
      OpenTripModel message that could not fit into one of
        the OTM fields otherwise. The `externalAttributes` member is meant for additional meta data and/or additional
        ID's of an entity. This can also help to identify an OTM entity in a system by the ID of that system.

       > Please, use this with caution: having too many external attributes can be a sign of not using OpenTripModel as
         it was intended.
    type: object
    properties: {}
    additionalProperties:
      $ref: ./unrestricted_json.yaml
  lifecycle:
    description: >-
      A lifecycle models _when_ the data in the action is taking place. You can
      provide the same action in multiple

      lifecycles to model how it changes over time. For example the planned and
      realized time of an action taking place

      can differ because of unforseen circumstances (such as traffic jams).
    type: string
    enum:
      - requested
      - planned
      - projected
      - actual
      - realized
  vehicle:
    description: The vehicle that is relevant for this event
    oneOf:
      - $ref: ./vehicle-association-inline.yaml
      - $ref: ./reference.yaml
      - $ref: ./attributeRestriction.yaml
    discriminator:
      propertyName: associationType
      mapping:
        inline: ./vehicle-association-inline.yaml
        reference: ./reference.yaml
        attributeRestriction: ./attributeRestriction.yaml
  geoReference:
    description: >-
      The location that is registered at the specified time, often using a
      single latitude/longitude combination.
    oneOf:
      - $ref: ./latLonPointGeoReference.yaml
      - $ref: ./latLonArrayGeoReference.yaml
      - $ref: ./Feature.yaml
      - $ref: ./openLRGeoReference.yaml
      - $ref: ./tmcLocationGeoReference.yaml
      - $ref: ./tmcArrayGeoReference.yaml
      - $ref: ./addressGeoReference.yaml
    discriminator:
      propertyName: type
      mapping:
        latLonPointGeoReference: ./latLonPointGeoReference.yaml
        latLonArrayGeoReference: ./latLonArrayGeoReference.yaml
        Feature: ./Feature.yaml
        openLRGeoReference: ./openLRGeoReference.yaml
        tmcLocationGeoReference: ./tmcLocationGeoReference.yaml
        tmcArrayGeoReference: ./tmcArrayGeoReference.yaml
        addressGeoReference: ./addressGeoReference.yaml
  actors:
    description: >-
      The actors that are relevant to this event, such as the carrier or shipper
      it belongs to.
    type: array
    items:
      oneOf:
        - $ref: ./associated-actors-inline.yaml
        - $ref: ./reference-roles.yaml
        - $ref: ./attributeRestriction-roles.yaml
      discriminator:
        propertyName: associationType
        mapping:
          inline: ./associated-actors-inline.yaml
          reference: ./reference-roles.yaml
          attributeRestriction: ./attributeRestriction-roles.yaml
required:
  - eventType
  - geoReference
