example:
  id: e0475c15-6d20-4085-a95e-427652585e5e
  remark: start stop at the warehouse
  location:
    uuid: 11c11d75-e114-4b5f-9751-b3a4afa23ecf
    entityType: location
    associationType: reference
  startTime: '2021-06-23T13:45:00Z'
  endTime: '2021-06-23T14:30:00Z'
  actions:
    - entity:
        id: cfb71ae8-ef85-4529-9b65-b2a3c8bc5aaa
        remark: We hope this is not going to take too long
        reason: Dock is occupied
        startTime: '2021-04-13T10:00:00Z'
        endTime: '2021-04-13T11:00:00Z'
        actionType: wait
      associationType: inline
    - entity:
        id: e81a7aa3-23a6-4089-b916-52b854c7b6f1
        lifecycle: planned
        remark: loading a consignment
        consignment:
          uuid: 047cfa4d-fd8b-47ba-b8e9-87067294d2fa
          entityType: consignment
          associationType: reference
        startTime: '2021-06-23T14:00:00Z'
        endTime: '2021-06-23T14:15:00Z'
        constraint:
          entity:
            id: 89a7bb4d-8720-4db9-aef7-4c3309186c3e
            name: Example combined constraint
            value:
              and:
                - startTime: '2021-06-23T10:00:00Z'
                  endTime: '2021-06-23T13:00:00Z'
                  description: alert-threshold
                  type: timeWindowConstraint
                - constraintType: maximum
                  maximum:
                    value: 5
                    unit: C
                  type: temperatureConstraint
                - or:
                    - fuelTypes:
                        - battery
                      type: fuelTypeConstraint
                    - fuelTypes:
                        - biodiesel
                      type: fuelTypeConstraint
                    - minimum: euro5
                      type: emissionStandardConstraint
                  type: orConstraint
              type: andConstraint
          associationType: inline
        actionType: load
      associationType: inline
    - entity:
        id: a5f5fc23-744a-46f7-81b4-bfe26629ad4f
        lifecycle: planned
        remark: unloading a consignment
        consignment:
          uuid: 047cfa4d-fd8b-47ba-b8e9-87067294d2fa
          entityType: consignment
          associationType: reference
        startTime: '2021-06-23T15:00:00Z'
        endTime: '2021-06-23T15:15:00Z'
        constraint:
          entity:
            id: 89a7bb4d-8720-4db9-aef7-4c3309186c3e
            name: Example combined constraint
            value:
              and:
                - startTime: '2021-06-23T10:00:00Z'
                  endTime: '2021-06-23T13:00:00Z'
                  description: alert-threshold
                  type: timeWindowConstraint
                - constraintType: maximum
                  maximum:
                    value: 5
                    unit: C
                  type: temperatureConstraint
                - or:
                    - fuelTypes:
                        - battery
                      type: fuelTypeConstraint
                    - fuelTypes:
                        - biodiesel
                      type: fuelTypeConstraint
                    - minimum: euro5
                      type: emissionStandardConstraint
                  type: orConstraint
              type: andConstraint
          associationType: inline
        actionType: unload
      associationType: inline
    - entity:
        id: 82aaffea-45e1-4c19-8720-ef44bc9a1968
        name: Lunch break
        remark: Everybody deserves a break once in a while
        startTime: '2021-04-13T11:00:00Z'
        endTime: '2021-04-13T11:30:00Z'
        actionType: break
      associationType: inline
  actionType: stop
type: object
properties:
  actionType:
    example: stop
    type: string
    enum:
      - stop
  id:
    description: >-
      Uniquely identifies this entity. A URI can be assigned by the client to
      indicate where more information
       can be retrieved. Note that every entity always has a unique EntityId. However since, OTM5.2 it is not
       required to send it in the request. One can be generated for you by the server.
    type: string
  name:
    description: Name of the entity. For display purposes and search only.
    type: string
  creationDate:
    description: The creation date of this entity.
    type: string
  lastModified:
    description: >-
      The last modified date of this entity. If none is given the creation date
      is used instead.
    type: string
  contextEvents:
    description: >-
      The context events provides some optional information about the events
      that can provide additional information
       on the current state of this entity.

      For example: your system might send ETA information for the arrival of a
      vehicle on a location. To make it clear

      what caused this ETA to be updated, we can include some information about
      what caused this ETA update by including

      an event as context. If your ETA update was caused by a location update,
      this event can be included as context. If

      the ETA was caused by a traffic accident on the route of the vehicle, you
      can include that event in the context.
    type: array
    items:
      $ref: ./events.yaml
  externalAttributes:
    type: object
    properties: {}
    additionalProperties:
      $ref: ./unrestricted_json.yaml
  lifecycle:
    description: >-
      A lifecycle models _when_ the data in the action is taking place. You can
      provide the same action in multiple

      lifecycles to model how it changes over time. For example the planned and
      realized time of an action taking place

      can differ because of unforseen circumstances (such as traffic jams).
    type: string
    enum:
      - requested
      - planned
      - projected
      - actual
      - realized
  result:
    description: >-
      The result of the action, can only be present in the actual or realized
      lifecycles. The result has a

      required status and optional additional info, like a remark and reason (in
      the case of failure).
    type: object
    properties:
      status:
        description: >-
          The status of the result, either succeeded, failed, partially
          succeeded or cancelled.
        type: string
        enum:
          - succeeded
          - failed
          - partiallySucceeded
          - cancelled
      remark:
        description: >-
          The remark of the result, usually only interesting in case the result
          was failed or partially succeedded. Note that

          differs from the remark on an action, which is a remark that is
          relevant before the execution of the action. Whereas

          this remark is relevant for the result after execution.
        type: string
      reason:
        description: >-
          The reason why the action (partially) failed. Currently the only
          supported reasons are 'damage' and

          `receiverAbsent`. E.g. as an example of the former: the handOver
          failed because the goods were too damaged and

          were rejected. An example of the latter is when the goods were planned
          to be delivered but nobody was there

          to receive the goods and therefore had to be taken back.
        type: string
        enum:
          - damage
          - receiverAbsent
    required:
      - status
  remark:
    description: Free text field for adding an on remark on this action.
    type: string
  sequenceNr:
    description: >-
      The sequence number of this action within the entity it is taking place.
      Can be used to indicate order when no times are present
    type: integer
    format: int64
  trip:
    description: >-
      The trip that this stop belongs too, usually is only provided if the trip
      is not clear from the context.
    oneOf:
      - $ref: ./trip-association-inline.yaml
      - $ref: ./reference.yaml
      - $ref: ./attributeRestriction.yaml
    discriminator:
      propertyName: associationType
      mapping:
        inline: ./trip-association-inline.yaml
        reference: ./reference.yaml
        attributeRestriction: ./attributeRestriction.yaml
  location:
    description: The location of this stop.
    oneOf:
      - $ref: ./stop-location-inline.yaml
      - $ref: ./reference.yaml
      - $ref: ./attributeRestriction.yaml
    discriminator:
      propertyName: associationType
      mapping:
        inline: ./stop-location-inline.yaml
        reference: ./reference.yaml
        attributeRestriction: ./attributeRestriction.yaml
  timeFormat:
    default: dateTime
    type: string
    enum:
      - dateTime
      - recurringDateTime
      - duration
  startTime:
    description: The time at which the actions starts in ISO format.
    type: string
  endTime:
    description: The time at which the action is completed in ISO format.
    type: string
  recurrence:
    description: >-
      The recurrence of the date time, should only be set when `timeFormat` is
      set to `recurringDateTime`. The

      recurrence follows the [Recurrence
      Rule](https://datatracker.ietf.org/doc/html/rfc5545#section-3.8.5.3)

      specification
    type: string
    format: recurrence
  duration:
    description: >-
      The duration of this action/event, should only be set when `timeFormat` is
      set to `duration`. The

      duration follows the [ISO
      8601](https://www.digi.com/resources/documentation/digidocs//90001488-13/reference/r_iso_8601_duration_format.htm)

      specification
    example: PT168H
    type: string
    format: duration
  actions:
    description: >-
      All the actions that are taking place at this stop, such as loading and
      unloading all consignments/goods.
    type: array
    items:
      $ref: ./associations-actions.yaml
  constraint:
    description: The constraints this stop abides to, such as start and end time windows.
    oneOf:
      - $ref: ./stop-constraint-inline.yaml
      - $ref: ./reference.yaml
      - $ref: ./attributeRestriction.yaml
    discriminator:
      propertyName: associationType
      mapping:
        inline: ./stop-constraint-inline.yaml
        reference: ./reference.yaml
        attributeRestriction: ./attributeRestriction.yaml
required:
  - actionType
